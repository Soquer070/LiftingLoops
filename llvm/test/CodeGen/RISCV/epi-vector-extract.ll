; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs < %s | FileCheck %s

define signext i64 @extract_nxv1i64(<vscale x 1 x i64> %v, i64 %idx)
; CHECK-LABEL: extract_nxv1i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e64,m1
; CHECK-NEXT:    vslidedown.vx v1, v16, a0
; CHECK-NEXT:    vmv.x.s a0, v1
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 1 x i64> %v, i64 %idx
  ret i64 %elem
}

define signext i32 @extract_nxv2i32(<vscale x 2 x i32> %v, i64 %idx)
; CHECK-LABEL: extract_nxv2i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e32,m1
; CHECK-NEXT:    vslidedown.vx v1, v16, a0
; CHECK-NEXT:    vmv.x.s a0, v1
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 2 x i32> %v, i64 %idx
  ret i32 %elem
}

define signext i16 @extract_nxv4i16(<vscale x 4 x i16> %v, i64 %idx)
; CHECK-LABEL: extract_nxv4i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e16,m1
; CHECK-NEXT:    vslidedown.vx v1, v16, a0
; CHECK-NEXT:    vmv.x.s a0, v1
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 4 x i16> %v, i64 %idx
  ret i16 %elem
}

define signext i8 @extract_nxv8i8(<vscale x 8 x i8> %v, i64 %idx)
; CHECK-LABEL: extract_nxv8i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e8,m1
; CHECK-NEXT:    vslidedown.vx v1, v16, a0
; CHECK-NEXT:    vmv.x.s a0, v1
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 8 x i8> %v, i64 %idx
  ret i8 %elem
}

define signext i64 @extract_nxv2i64(<vscale x 2 x i64> %v, i64 %idx)
; CHECK-LABEL: extract_nxv2i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e64,m2
; CHECK-NEXT:    vslidedown.vx v2, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e64,m1
; CHECK-NEXT:    vmv.x.s a0, v2
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 2 x i64> %v, i64 %idx
  ret i64 %elem
}

define signext i32 @extract_nxv4i32(<vscale x 4 x i32> %v, i64 %idx)
; CHECK-LABEL: extract_nxv4i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e32,m2
; CHECK-NEXT:    vslidedown.vx v2, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e32,m1
; CHECK-NEXT:    vmv.x.s a0, v2
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 4 x i32> %v, i64 %idx
  ret i32 %elem
}

define signext i16 @extract_nxv8i16(<vscale x 8 x i16> %v, i64 %idx)
; CHECK-LABEL: extract_nxv8i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e16,m2
; CHECK-NEXT:    vslidedown.vx v2, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e16,m1
; CHECK-NEXT:    vmv.x.s a0, v2
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 8 x i16> %v, i64 %idx
  ret i16 %elem
}

define signext i8 @extract_nxv16i8(<vscale x 16 x i8> %v, i64 %idx)
; CHECK-LABEL: extract_nxv16i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e8,m2
; CHECK-NEXT:    vslidedown.vx v2, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e8,m1
; CHECK-NEXT:    vmv.x.s a0, v2
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 16 x i8> %v, i64 %idx
  ret i8 %elem
}

define signext i64 @extract_nxv4i64(<vscale x 4 x i64> %v, i64 %idx)
; CHECK-LABEL: extract_nxv4i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e64,m4
; CHECK-NEXT:    vslidedown.vx v4, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e64,m1
; CHECK-NEXT:    vmv.x.s a0, v4
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 4 x i64> %v, i64 %idx
  ret i64 %elem
}

define signext i32 @extract_nxv8i32(<vscale x 8 x i32> %v, i64 %idx)
; CHECK-LABEL: extract_nxv8i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e32,m4
; CHECK-NEXT:    vslidedown.vx v4, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e32,m1
; CHECK-NEXT:    vmv.x.s a0, v4
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 8 x i32> %v, i64 %idx
  ret i32 %elem
}

define signext i16 @extract_nxv16i16(<vscale x 16 x i16> %v, i64 %idx)
; CHECK-LABEL: extract_nxv16i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e16,m4
; CHECK-NEXT:    vslidedown.vx v4, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e16,m1
; CHECK-NEXT:    vmv.x.s a0, v4
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 16 x i16> %v, i64 %idx
  ret i16 %elem
}

define signext i8 @extract_nxv32i8(<vscale x 32 x i8> %v, i64 %idx)
; CHECK-LABEL: extract_nxv32i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e8,m4
; CHECK-NEXT:    vslidedown.vx v4, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e8,m1
; CHECK-NEXT:    vmv.x.s a0, v4
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 32 x i8> %v, i64 %idx
  ret i8 %elem
}

define signext i64 @extract_nxv8i64(<vscale x 8 x i64> %v, i64 %idx)
; CHECK-LABEL: extract_nxv8i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e64,m8
; CHECK-NEXT:    vslidedown.vx v8, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e64,m1
; CHECK-NEXT:    vmv.x.s a0, v8
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 8 x i64> %v, i64 %idx
  ret i64 %elem
}

define signext i32 @extract_nxv16i32(<vscale x 16 x i32> %v, i64 %idx)
; CHECK-LABEL: extract_nxv16i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e32,m8
; CHECK-NEXT:    vslidedown.vx v8, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e32,m1
; CHECK-NEXT:    vmv.x.s a0, v8
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 16 x i32> %v, i64 %idx
  ret i32 %elem
}

define signext i16 @extract_nxv32i16(<vscale x 32 x i16> %v, i64 %idx)
; CHECK-LABEL: extract_nxv32i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e16,m8
; CHECK-NEXT:    vslidedown.vx v8, v16, a0
; CHECK-NEXT:    vsetvli zero, zero, e16,m1
; CHECK-NEXT:    vmv.x.s a0, v8
; CHECK-NEXT:    ret
{
  %elem = extractelement <vscale x 32 x i16> %v, i64 %idx
  ret i16 %elem
}

; FIXME nxv64i8 unsupported
;define signext i8 @extract_nxv64i8(<vscale x 64 x i8> %v, i64 %idx)
;{
;  %elem = extractelement <vscale x 64 x i8> %v, i64 %idx
;  ret i8 %elem
;}
