; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple riscv64 -relocation-model=pic < %s | FileCheck %s

@x = dso_local thread_local global i32 42, align 4

define dso_local void @test_1() nounwind {
; CHECK-LABEL: test_1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addi sp, sp, -16
; CHECK-NEXT:    sd ra, 8(sp)
; CHECK-NEXT:    la.tls.gd a0, x
; CHECK-NEXT:    call __tls_get_addr@plt
; CHECK-NEXT:    lw a1, 0(a0)
; CHECK-NEXT:    addi a1, a1, 1
; CHECK-NEXT:    sw a1, 0(a0)
; CHECK-NEXT:    ld ra, 8(sp)
; CHECK-NEXT:    addi sp, sp, 16
; CHECK-NEXT:    ret
entry:
  %0 = load i32, i32* @x, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @x, align 4
  ret void
}

@y = dso_local thread_local(localdynamic) global i32 42, align 4

define dso_local void @test_2() nounwind {
; CHECK-LABEL: test_2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addi sp, sp, -16
; CHECK-NEXT:    sd ra, 8(sp)
; CHECK-NEXT:    la.tls.gd a0, y
; CHECK-NEXT:    call __tls_get_addr@plt
; CHECK-NEXT:    lw a1, 0(a0)
; CHECK-NEXT:    addi a1, a1, 1
; CHECK-NEXT:    sw a1, 0(a0)
; CHECK-NEXT:    ld ra, 8(sp)
; CHECK-NEXT:    addi sp, sp, 16
; CHECK-NEXT:    ret
entry:
  %0 = load i32, i32* @y, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @y, align 4
  ret void
}
