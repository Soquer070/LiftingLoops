; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -riscv-v-vector-bits-min=64 --passes=loop-vectorize,instcombine,simplifycfg < %s -o - \
; RUN:    -vectorizer-use-vp-strided-load-store=false \
; RUN:    | FileCheck --check-prefix=GATHER %s
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -riscv-v-vector-bits-min=64 --passes=loop-vectorize,instcombine,simplifycfg < %s -o - \
; RUN:    -vectorizer-use-vp-strided-load-store=false \
; RUN:    -interleave-no-scalar-epilogue=true \
; RUN:    | FileCheck --check-prefix=GATHER-INTERLEAVE %s
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -riscv-v-vector-bits-min=64 --passes=loop-vectorize,instcombine,simplifycfg < %s -o - \
; RUN:    | FileCheck --check-prefix=STRIDED %s
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -interleave-no-scalar-epilogue=true \
; RUN:    -S -riscv-v-vector-bits-min=64 --passes=loop-vectorize,instcombine,simplifycfg < %s -o - \
; RUN:    | FileCheck --check-prefix=STRIDED-INTERLEAVE %s

; Tests from https://reviews.llvm.org/D107790
;
; void gather(signed char * __restrict  A, signed char * __restrict B) {
;   for (int i = 0; i != 1024; ++i)
;       A[i] += B[i * 5];
; }

define dso_local void @gather(i8* noalias nocapture %A, i8* noalias nocapture readonly %B) {
; GATHER-LABEL: @gather(
; GATHER-NEXT:  entry:
; GATHER-NEXT:    [[TMP0:%.*]] = call <vscale x 1 x i64> @llvm.experimental.stepvector.nxv1i64()
; GATHER-NEXT:    br label [[VECTOR_BODY:%.*]]
; GATHER:       vector.body:
; GATHER-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-NEXT:    [[VEC_IND:%.*]] = phi <vscale x 1 x i64> [ [[TMP0]], [[ENTRY]] ], [ [[VEC_IND_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-NEXT:    [[TMP1:%.*]] = sub i64 1024, [[INDEX]]
; GATHER-NEXT:    [[TMP2:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP1]], i64 0, i64 5)
; GATHER-NEXT:    [[TMP3:%.*]] = trunc i64 [[TMP2]] to i32
; GATHER-NEXT:    [[TMP4:%.*]] = and i64 [[TMP2]], 4294967295
; GATHER-NEXT:    [[DOTSPLATINSERT1:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP4]], i64 0
; GATHER-NEXT:    [[DOTSPLAT2:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT1]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-NEXT:    [[VP_OP:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[VEC_IND]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B:%.*]], i64 0
; GATHER-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-NEXT:    [[TMP5:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[TMP6:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP5]], <vscale x 1 x i64> [[VP_OP]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[TMP7:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP6]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[VP_GATHER:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP7]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[TMP8:%.*]] = getelementptr inbounds i8, ptr [[A:%.*]], i64 [[INDEX]]
; GATHER-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP8]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[VP_OP3:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD]], <vscale x 1 x i8> [[VP_GATHER]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP3]], ptr [[TMP8]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-NEXT:    [[TMP9:%.*]] = and i64 [[TMP2]], 4294967295
; GATHER-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP9]]
; GATHER-NEXT:    [[VEC_IND_NEXT]] = add <vscale x 1 x i64> [[VEC_IND]], [[DOTSPLAT2]]
; GATHER-NEXT:    [[TMP10:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; GATHER-NEXT:    br i1 [[TMP10]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; GATHER:       for.cond.cleanup:
; GATHER-NEXT:    ret void
;
; GATHER-INTERLEAVE-LABEL: @gather(
; GATHER-INTERLEAVE-NEXT:  entry:
; GATHER-INTERLEAVE-NEXT:    [[TMP0:%.*]] = call <vscale x 1 x i64> @llvm.experimental.stepvector.nxv1i64()
; GATHER-INTERLEAVE-NEXT:    br label [[VECTOR_BODY:%.*]]
; GATHER-INTERLEAVE:       vector.body:
; GATHER-INTERLEAVE-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-INTERLEAVE-NEXT:    [[VEC_IND:%.*]] = phi <vscale x 1 x i64> [ [[TMP0]], [[ENTRY]] ], [ [[VEC_IND_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-INTERLEAVE-NEXT:    [[TMP1:%.*]] = sub i64 1024, [[INDEX]]
; GATHER-INTERLEAVE-NEXT:    [[TMP2:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP1]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP3:%.*]] = trunc i64 [[TMP2]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP4:%.*]] = sub i64 [[TMP1]], [[TMP2]]
; GATHER-INTERLEAVE-NEXT:    [[TMP5:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP4]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP6:%.*]] = trunc i64 [[TMP5]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP7:%.*]] = sub i64 [[TMP4]], [[TMP5]]
; GATHER-INTERLEAVE-NEXT:    [[TMP8:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP7]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP9:%.*]] = trunc i64 [[TMP8]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP10:%.*]] = sub i64 [[TMP7]], [[TMP8]]
; GATHER-INTERLEAVE-NEXT:    [[TMP11:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP10]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP12:%.*]] = trunc i64 [[TMP11]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP13:%.*]] = sub i64 [[TMP10]], [[TMP11]]
; GATHER-INTERLEAVE-NEXT:    [[TMP14:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP13]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP15:%.*]] = trunc i64 [[TMP14]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP16:%.*]] = sub i64 [[TMP13]], [[TMP14]]
; GATHER-INTERLEAVE-NEXT:    [[TMP17:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP16]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP18:%.*]] = trunc i64 [[TMP17]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP19:%.*]] = sub i64 [[TMP16]], [[TMP17]]
; GATHER-INTERLEAVE-NEXT:    [[TMP20:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP19]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP21:%.*]] = trunc i64 [[TMP20]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP22:%.*]] = sub i64 [[TMP19]], [[TMP20]]
; GATHER-INTERLEAVE-NEXT:    [[TMP23:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP22]], i64 0, i64 5)
; GATHER-INTERLEAVE-NEXT:    [[TMP24:%.*]] = trunc i64 [[TMP23]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP25:%.*]] = and i64 [[TMP2]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT1:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP25]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT2:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT1]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD:%.*]] = add <vscale x 1 x i64> [[VEC_IND]], [[DOTSPLAT2]]
; GATHER-INTERLEAVE-NEXT:    [[TMP26:%.*]] = and i64 [[TMP5]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT3:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP26]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT4:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT3]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD5:%.*]] = add <vscale x 1 x i64> [[STEP_ADD]], [[DOTSPLAT4]]
; GATHER-INTERLEAVE-NEXT:    [[TMP27:%.*]] = and i64 [[TMP8]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT6:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP27]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT7:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT6]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD8:%.*]] = add <vscale x 1 x i64> [[STEP_ADD5]], [[DOTSPLAT7]]
; GATHER-INTERLEAVE-NEXT:    [[TMP28:%.*]] = and i64 [[TMP11]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT9:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP28]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT10:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT9]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD11:%.*]] = add <vscale x 1 x i64> [[STEP_ADD8]], [[DOTSPLAT10]]
; GATHER-INTERLEAVE-NEXT:    [[TMP29:%.*]] = and i64 [[TMP14]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT12:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP29]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT13:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT12]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD14:%.*]] = add <vscale x 1 x i64> [[STEP_ADD11]], [[DOTSPLAT13]]
; GATHER-INTERLEAVE-NEXT:    [[TMP30:%.*]] = and i64 [[TMP17]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT15:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP30]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT16:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT15]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD17:%.*]] = add <vscale x 1 x i64> [[STEP_ADD14]], [[DOTSPLAT16]]
; GATHER-INTERLEAVE-NEXT:    [[TMP31:%.*]] = and i64 [[TMP20]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT18:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP31]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT19:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT18]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD20:%.*]] = add <vscale x 1 x i64> [[STEP_ADD17]], [[DOTSPLAT19]]
; GATHER-INTERLEAVE-NEXT:    [[TMP32:%.*]] = and i64 [[TMP23]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT21:%.*]] = insertelement <vscale x 1 x i64> poison, i64 [[TMP32]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT22:%.*]] = shufflevector <vscale x 1 x i64> [[DOTSPLATINSERT21]], <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[VP_OP:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[VEC_IND]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP31:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP32:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD5]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP33:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD8]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP34:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD11]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP35:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD14]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP36:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD17]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP37:%.*]] = call <vscale x 1 x i64> @llvm.vp.mul.nxv1i64(<vscale x 1 x i64> [[STEP_ADD20]], <vscale x 1 x i64> shufflevector (<vscale x 1 x i64> insertelement (<vscale x 1 x i64> poison, i64 5, i64 0), <vscale x 1 x i64> poison, <vscale x 1 x i32> zeroinitializer), <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B:%.*]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP33:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[TMP34:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP33]], <vscale x 1 x i64> [[VP_OP]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[TMP35:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP34]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT68:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT69:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT68]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP36:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT69]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP37:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP36]], <vscale x 1 x i64> [[VP_OP31]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP38:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP37]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT70:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT71:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT70]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP39:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT71]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP40:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP39]], <vscale x 1 x i64> [[VP_OP32]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP41:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP40]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT72:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT73:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT72]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP42:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT73]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP43:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP42]], <vscale x 1 x i64> [[VP_OP33]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP44:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP43]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT74:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT75:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT74]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP45:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT75]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP46:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP45]], <vscale x 1 x i64> [[VP_OP34]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP47:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP46]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT76:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT77:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT76]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP48:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT77]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP49:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP48]], <vscale x 1 x i64> [[VP_OP35]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP50:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP49]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT78:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT79:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT78]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP51:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT79]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP52:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP51]], <vscale x 1 x i64> [[VP_OP36]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP53:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP52]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT80:%.*]] = insertelement <vscale x 1 x ptr> poison, ptr [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT81:%.*]] = shufflevector <vscale x 1 x ptr> [[DOTSPLATINSERT80]], <vscale x 1 x ptr> poison, <vscale x 1 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP54:%.*]] = call <vscale x 1 x i64> @llvm.vp.ptrtoint.nxv1i64.nxv1p0(<vscale x 1 x ptr> [[DOTSPLAT81]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP55:%.*]] = call <vscale x 1 x i64> @llvm.vp.add.nxv1i64(<vscale x 1 x i64> [[TMP54]], <vscale x 1 x i64> [[VP_OP37]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP56:%.*]] = call <vscale x 1 x ptr> @llvm.vp.inttoptr.nxv1p0.nxv1i64(<vscale x 1 x i64> [[TMP55]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP35]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER38:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP38]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER39:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP41]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER40:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP44]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER41:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP47]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER42:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP50]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER43:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP53]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER44:%.*]] = call <vscale x 1 x i8> @llvm.vp.gather.nxv1i8.nxv1p0(<vscale x 1 x ptr> [[TMP56]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP57:%.*]] = getelementptr inbounds i8, ptr [[A:%.*]], i64 [[INDEX]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP57]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[TMP58:%.*]] = sext i32 [[TMP3]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP59:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP58]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD45:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP59]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP60:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP61:%.*]] = sext i32 [[TMP60]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP62:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP61]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD46:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP62]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP63:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP64:%.*]] = add i32 [[TMP63]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP65:%.*]] = sext i32 [[TMP64]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP66:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP65]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD47:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP66]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP67:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP68:%.*]] = add i32 [[TMP67]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP69:%.*]] = add i32 [[TMP68]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP70:%.*]] = sext i32 [[TMP69]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP71:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP70]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD48:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP71]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP72:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP73:%.*]] = add i32 [[TMP72]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP74:%.*]] = add i32 [[TMP73]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP75:%.*]] = add i32 [[TMP74]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP76:%.*]] = sext i32 [[TMP75]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP77:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP76]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD49:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP77]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP78:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP79:%.*]] = add i32 [[TMP78]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP80:%.*]] = add i32 [[TMP79]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP81:%.*]] = add i32 [[TMP80]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP82:%.*]] = add i32 [[TMP81]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP83:%.*]] = sext i32 [[TMP82]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP84:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP83]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD50:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP84]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP85:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP86:%.*]] = add i32 [[TMP85]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP87:%.*]] = add i32 [[TMP86]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP88:%.*]] = add i32 [[TMP87]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP89:%.*]] = add i32 [[TMP88]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP90:%.*]] = add i32 [[TMP89]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP91:%.*]] = sext i32 [[TMP90]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP91]]
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD51:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP92]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP52:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD]], <vscale x 1 x i8> [[VP_GATHER]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP53:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD45]], <vscale x 1 x i8> [[VP_GATHER38]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP54:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD46]], <vscale x 1 x i8> [[VP_GATHER39]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP55:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD47]], <vscale x 1 x i8> [[VP_GATHER40]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP56:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD48]], <vscale x 1 x i8> [[VP_GATHER41]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP57:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD49]], <vscale x 1 x i8> [[VP_GATHER42]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP58:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD50]], <vscale x 1 x i8> [[VP_GATHER43]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP59:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD51]], <vscale x 1 x i8> [[VP_GATHER44]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP52]], ptr [[TMP57]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP3]])
; GATHER-INTERLEAVE-NEXT:    [[TMP93:%.*]] = sext i32 [[TMP3]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP94:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP93]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP53]], ptr [[TMP94]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP95:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP96:%.*]] = sext i32 [[TMP95]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP97:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP96]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP54]], ptr [[TMP97]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP98:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP99:%.*]] = add i32 [[TMP98]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP100:%.*]] = sext i32 [[TMP99]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP101:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP100]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP55]], ptr [[TMP101]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP102:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP103:%.*]] = add i32 [[TMP102]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP104:%.*]] = add i32 [[TMP103]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP105:%.*]] = sext i32 [[TMP104]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP106:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP105]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP56]], ptr [[TMP106]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP107:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP108:%.*]] = add i32 [[TMP107]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP109:%.*]] = add i32 [[TMP108]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP110:%.*]] = add i32 [[TMP109]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP111:%.*]] = sext i32 [[TMP110]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP112:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP111]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP57]], ptr [[TMP112]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP113:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP114:%.*]] = add i32 [[TMP113]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP115:%.*]] = add i32 [[TMP114]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP116:%.*]] = add i32 [[TMP115]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP117:%.*]] = add i32 [[TMP116]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP118:%.*]] = sext i32 [[TMP117]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP119:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP118]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP58]], ptr [[TMP119]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP120:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP121:%.*]] = add i32 [[TMP120]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP122:%.*]] = add i32 [[TMP121]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP123:%.*]] = add i32 [[TMP122]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP124:%.*]] = add i32 [[TMP123]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP125:%.*]] = add i32 [[TMP124]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP126:%.*]] = sext i32 [[TMP125]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP127:%.*]] = getelementptr inbounds i8, ptr [[TMP57]], i64 [[TMP126]]
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP59]], ptr [[TMP127]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP128:%.*]] = add i32 [[TMP3]], [[TMP6]]
; GATHER-INTERLEAVE-NEXT:    [[TMP129:%.*]] = add i32 [[TMP128]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP130:%.*]] = add i32 [[TMP129]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP131:%.*]] = add i32 [[TMP130]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP132:%.*]] = add i32 [[TMP131]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP133:%.*]] = add i32 [[TMP132]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP134:%.*]] = add i32 [[TMP133]], [[TMP24]]
; GATHER-INTERLEAVE-NEXT:    [[TMP135:%.*]] = zext i32 [[TMP134]] to i64
; GATHER-INTERLEAVE-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP135]]
; GATHER-INTERLEAVE-NEXT:    [[VEC_IND_NEXT]] = add <vscale x 1 x i64> [[STEP_ADD20]], [[DOTSPLAT22]]
; GATHER-INTERLEAVE-NEXT:    [[TMP136:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; GATHER-INTERLEAVE-NEXT:    br i1 [[TMP136]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; GATHER-INTERLEAVE:       for.cond.cleanup:
; GATHER-INTERLEAVE-NEXT:    ret void
;
; STRIDED-LABEL: @gather(
; STRIDED-NEXT:  entry:
; STRIDED-NEXT:    br label [[VECTOR_BODY:%.*]]
; STRIDED:       vector.body:
; STRIDED-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; STRIDED-NEXT:    [[TMP0:%.*]] = sub i64 1024, [[INDEX]]
; STRIDED-NEXT:    [[TMP1:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP0]], i64 0, i64 5)
; STRIDED-NEXT:    [[TMP2:%.*]] = trunc i64 [[TMP1]] to i32
; STRIDED-NEXT:    [[TMP3:%.*]] = mul i64 [[INDEX]], 5
; STRIDED-NEXT:    [[TMP4:%.*]] = getelementptr i8, ptr [[B:%.*]], i64 [[TMP3]]
; STRIDED-NEXT:    [[VP_STRIDED_LOAD:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP4]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-NEXT:    [[TMP5:%.*]] = getelementptr inbounds i8, ptr [[A:%.*]], i64 [[INDEX]]
; STRIDED-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP5]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-NEXT:    [[VP_OP3:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD]], <vscale x 1 x i8> [[VP_STRIDED_LOAD]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP3]], ptr [[TMP5]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-NEXT:    [[TMP6:%.*]] = and i64 [[TMP1]], 4294967295
; STRIDED-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP6]]
; STRIDED-NEXT:    [[TMP7:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; STRIDED-NEXT:    br i1 [[TMP7]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; STRIDED:       for.cond.cleanup:
; STRIDED-NEXT:    ret void
;
; STRIDED-INTERLEAVE-LABEL: @gather(
; STRIDED-INTERLEAVE-NEXT:  entry:
; STRIDED-INTERLEAVE-NEXT:    br label [[VECTOR_BODY:%.*]]
; STRIDED-INTERLEAVE:       vector.body:
; STRIDED-INTERLEAVE-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; STRIDED-INTERLEAVE-NEXT:    [[TMP0:%.*]] = sub i64 1024, [[INDEX]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP1:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP0]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP2:%.*]] = trunc i64 [[TMP1]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP3:%.*]] = sub i64 [[TMP0]], [[TMP1]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP4:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP3]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP5:%.*]] = trunc i64 [[TMP4]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP6:%.*]] = sub i64 [[TMP3]], [[TMP4]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP7:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP6]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP8:%.*]] = trunc i64 [[TMP7]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP9:%.*]] = sub i64 [[TMP6]], [[TMP7]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP10:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP9]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP11:%.*]] = trunc i64 [[TMP10]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP12:%.*]] = sub i64 [[TMP9]], [[TMP10]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP13:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP12]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP14:%.*]] = trunc i64 [[TMP13]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP15:%.*]] = sub i64 [[TMP12]], [[TMP13]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP16:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP15]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP17:%.*]] = trunc i64 [[TMP16]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP18:%.*]] = sub i64 [[TMP15]], [[TMP16]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP19:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP18]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP20:%.*]] = trunc i64 [[TMP19]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP21:%.*]] = sub i64 [[TMP18]], [[TMP19]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP22:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP21]], i64 0, i64 5)
; STRIDED-INTERLEAVE-NEXT:    [[TMP23:%.*]] = trunc i64 [[TMP22]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP24:%.*]] = mul i64 [[INDEX]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP25:%.*]] = getelementptr i8, ptr [[B:%.*]], i64 [[TMP24]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP25]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP26:%.*]] = and i64 [[TMP1]], 4294967295
; STRIDED-INTERLEAVE-NEXT:    [[TMP27:%.*]] = mul nuw nsw i64 [[TMP26]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP28:%.*]] = mul i64 [[INDEX]], [[TMP27]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP29:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP28]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD38:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP29]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP30:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP31:%.*]] = zext i32 [[TMP30]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP32:%.*]] = mul nuw nsw i64 [[TMP31]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP33:%.*]] = mul i64 [[INDEX]], [[TMP32]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP34:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP33]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD39:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP34]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP35:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP36:%.*]] = add i32 [[TMP35]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP37:%.*]] = zext i32 [[TMP36]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP38:%.*]] = mul nuw nsw i64 [[TMP37]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP39:%.*]] = mul i64 [[INDEX]], [[TMP38]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP40:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP39]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD40:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP40]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP41:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP42:%.*]] = add i32 [[TMP41]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP43:%.*]] = add i32 [[TMP42]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP44:%.*]] = zext i32 [[TMP43]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP45:%.*]] = mul nuw nsw i64 [[TMP44]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP46:%.*]] = mul i64 [[INDEX]], [[TMP45]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP47:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP46]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD41:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP47]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP48:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP49:%.*]] = add i32 [[TMP48]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP50:%.*]] = add i32 [[TMP49]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP51:%.*]] = add i32 [[TMP50]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP52:%.*]] = zext i32 [[TMP51]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP53:%.*]] = mul nuw nsw i64 [[TMP52]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP54:%.*]] = mul i64 [[INDEX]], [[TMP53]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP55:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP54]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD42:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP55]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP56:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP57:%.*]] = add i32 [[TMP56]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP58:%.*]] = add i32 [[TMP57]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP59:%.*]] = add i32 [[TMP58]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP60:%.*]] = add i32 [[TMP59]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP61:%.*]] = zext i32 [[TMP60]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP62:%.*]] = mul nuw nsw i64 [[TMP61]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP63:%.*]] = mul i64 [[INDEX]], [[TMP62]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP64:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP63]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD43:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP64]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP65:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP66:%.*]] = add i32 [[TMP65]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP67:%.*]] = add i32 [[TMP66]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP68:%.*]] = add i32 [[TMP67]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP69:%.*]] = add i32 [[TMP68]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP70:%.*]] = add i32 [[TMP69]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP71:%.*]] = zext i32 [[TMP70]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP72:%.*]] = mul nuw nsw i64 [[TMP71]], 5
; STRIDED-INTERLEAVE-NEXT:    [[TMP73:%.*]] = mul i64 [[INDEX]], [[TMP72]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP74:%.*]] = getelementptr i8, ptr [[B]], i64 [[TMP73]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD44:%.*]] = call <vscale x 1 x i8> @llvm.experimental.vp.strided.load.nxv1i8.p0.i64(ptr [[TMP74]], i64 5, <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP75:%.*]] = getelementptr inbounds i8, ptr [[A:%.*]], i64 [[INDEX]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP75]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP76:%.*]] = sext i32 [[TMP2]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP77:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP76]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD45:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP77]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP78:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP79:%.*]] = sext i32 [[TMP78]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP80:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP79]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD46:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP80]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP81:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP82:%.*]] = add i32 [[TMP81]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP83:%.*]] = sext i32 [[TMP82]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP84:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP83]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD47:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP84]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP85:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP86:%.*]] = add i32 [[TMP85]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP87:%.*]] = add i32 [[TMP86]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP88:%.*]] = sext i32 [[TMP87]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP89:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP88]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD48:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP89]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP90:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP91:%.*]] = add i32 [[TMP90]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP92:%.*]] = add i32 [[TMP91]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP93:%.*]] = add i32 [[TMP92]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP94:%.*]] = sext i32 [[TMP93]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP95:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP94]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD49:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP95]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP96:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP97:%.*]] = add i32 [[TMP96]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP98:%.*]] = add i32 [[TMP97]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP99:%.*]] = add i32 [[TMP98]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP100:%.*]] = add i32 [[TMP99]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP101:%.*]] = sext i32 [[TMP100]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP102:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP101]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD50:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP102]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP103:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP104:%.*]] = add i32 [[TMP103]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP105:%.*]] = add i32 [[TMP104]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP106:%.*]] = add i32 [[TMP105]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP107:%.*]] = add i32 [[TMP106]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP108:%.*]] = add i32 [[TMP107]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP109:%.*]] = sext i32 [[TMP108]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP110:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP109]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD51:%.*]] = call <vscale x 1 x i8> @llvm.vp.load.nxv1i8.p0(ptr [[TMP110]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP52:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD]], <vscale x 1 x i8> [[VP_STRIDED_LOAD]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP53:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD45]], <vscale x 1 x i8> [[VP_STRIDED_LOAD38]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP54:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD46]], <vscale x 1 x i8> [[VP_STRIDED_LOAD39]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP55:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD47]], <vscale x 1 x i8> [[VP_STRIDED_LOAD40]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP56:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD48]], <vscale x 1 x i8> [[VP_STRIDED_LOAD41]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP57:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD49]], <vscale x 1 x i8> [[VP_STRIDED_LOAD42]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP58:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD50]], <vscale x 1 x i8> [[VP_STRIDED_LOAD43]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP59:%.*]] = call <vscale x 1 x i8> @llvm.vp.add.nxv1i8(<vscale x 1 x i8> [[VP_OP_LOAD51]], <vscale x 1 x i8> [[VP_STRIDED_LOAD44]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP52]], ptr [[TMP75]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP2]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP111:%.*]] = sext i32 [[TMP2]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP112:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP111]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP53]], ptr [[TMP112]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP113:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP114:%.*]] = sext i32 [[TMP113]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP115:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP114]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP54]], ptr [[TMP115]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP116:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP117:%.*]] = add i32 [[TMP116]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP118:%.*]] = sext i32 [[TMP117]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP119:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP118]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP55]], ptr [[TMP119]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP120:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP121:%.*]] = add i32 [[TMP120]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP122:%.*]] = add i32 [[TMP121]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP123:%.*]] = sext i32 [[TMP122]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP124:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP123]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP56]], ptr [[TMP124]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP125:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP126:%.*]] = add i32 [[TMP125]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP127:%.*]] = add i32 [[TMP126]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP128:%.*]] = add i32 [[TMP127]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP129:%.*]] = sext i32 [[TMP128]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP130:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP129]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP57]], ptr [[TMP130]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP131:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP132:%.*]] = add i32 [[TMP131]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP133:%.*]] = add i32 [[TMP132]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP134:%.*]] = add i32 [[TMP133]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP135:%.*]] = add i32 [[TMP134]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP136:%.*]] = sext i32 [[TMP135]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP137:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP136]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP58]], ptr [[TMP137]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP138:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP139:%.*]] = add i32 [[TMP138]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP140:%.*]] = add i32 [[TMP139]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP141:%.*]] = add i32 [[TMP140]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP142:%.*]] = add i32 [[TMP141]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP143:%.*]] = add i32 [[TMP142]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP144:%.*]] = sext i32 [[TMP143]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP145:%.*]] = getelementptr inbounds i8, ptr [[TMP75]], i64 [[TMP144]]
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv1i8.p0(<vscale x 1 x i8> [[VP_OP59]], ptr [[TMP145]], <vscale x 1 x i1> shufflevector (<vscale x 1 x i1> insertelement (<vscale x 1 x i1> poison, i1 true, i64 0), <vscale x 1 x i1> poison, <vscale x 1 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP146:%.*]] = add i32 [[TMP2]], [[TMP5]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP147:%.*]] = add i32 [[TMP146]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP148:%.*]] = add i32 [[TMP147]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP149:%.*]] = add i32 [[TMP148]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP150:%.*]] = add i32 [[TMP149]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP151:%.*]] = add i32 [[TMP150]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP152:%.*]] = add i32 [[TMP151]], [[TMP23]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP153:%.*]] = zext i32 [[TMP152]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP153]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP154:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; STRIDED-INTERLEAVE-NEXT:    br i1 [[TMP154]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; STRIDED-INTERLEAVE:       for.cond.cleanup:
; STRIDED-INTERLEAVE-NEXT:    ret void
;
entry:
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %0 = mul nuw nsw i64 %indvars.iv, 5
  %arrayidx = getelementptr inbounds i8, i8* %B, i64 %0
  %1 = load i8, i8* %arrayidx, align 1
  %arrayidx2 = getelementptr inbounds i8, i8* %A, i64 %indvars.iv
  %2 = load i8, i8* %arrayidx2, align 1
  %add = add i8 %2, %1
  store i8 %add, i8* %arrayidx2, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp.not = icmp eq i64 %indvars.iv.next, 1024
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}
